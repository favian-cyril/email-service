// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String        @id @default(uuid())
  email              String        @unique
  firstName          String
  lastName           String
  password           String
  currency           String
  additionalKeywords String[]
  userEmails         UserEmails[]
  invoices           Invoice[]
  task               Task[]
  senderEmails       SenderEmail[]
  labels             Label[]
}

model SenderEmail {
  id      String    @id @default(uuid())
  userId  String
  user    User      @relation(fields: [userId], references: [id])
  email   String
  labelId String
  label   Label     @relation(fields: [labelId], references: [id])
  invoice Invoice[]

  @@unique([id, email])
}

model Label {
  id          String        @id @default(uuid())
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  senderEmail SenderEmail[]
  value       String
  color       String
  invoices    Invoice[]
}

model Invoice {
  id            String      @id @default(uuid())
  emailId       String
  amount        Float
  labels        Label[]
  otherAmounts  Float[]
  emailContent  String
  summary       String
  currency      String
  senderEmailId String
  senderEmail   SenderEmail @relation(fields: [senderEmailId], references: [id])
  isValid       Boolean
  userId        String
  emailCreated  DateTime
  created       DateTime    @default(now())
  user          User        @relation(fields: [userId], references: [id])
}

model Task {
  id       String  @id @default(uuid())
  schedule String // e.g. "0 0 * * *"
  timezone String // e.g. "America/New_York"
  userId   String
  isActive Boolean
  user     User    @relation(fields: [userId], references: [id])
}

model UserEmails {
  id           String @id @default(uuid())
  email        String @unique
  refreshToken String
  userId       String
  user         User   @relation(fields: [userId], references: [id])
}
